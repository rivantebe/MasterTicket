steps:
  # Step 1: Build the JAR file using Maven
  - name: 'gcr.io/cloud-builders/mvn'
    args:
      - clean
      - package
      - -DskipTests

  # Step 2: List the contents of the target directory (for debugging purposes)
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'ls -la target/'

  # Step 3: Build the Docker image
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
      - '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - .
      - '-f'
      - Dockerfile
    id: Build

  # Step 4: Push the Docker image to Google Container Registry
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
    id: Push

  # Step 5: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - '--image=$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '--labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID'
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud

images:
  - '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'

options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _PLATFORM: managed
  _SERVICE_NAME: camwilcariva
  REPO_NAME: masterticket
  _DEPLOY_REGION: us-central1
  _TRIGGER_ID: 37e771b4-1398-477b-a5a4-8b63f95cfc4e
  _AR_HOSTNAME: us-central1-docker.pkg.dev

tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - camwilcariva
